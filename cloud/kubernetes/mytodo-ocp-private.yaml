---
# Application to deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mytodo
  namespace: default
spec:
  replicas: 3 # tells deployment to run Xs pods
  selector:
    matchLabels:
      app: mytodo
  template:
    metadata:
      labels:
        app: mytodo
        tier: frontend
    spec:
      containers:
      - name: mytodo
        # image: lionelmace/mytodo:lts-alpine3.12
        image: de.icr.io/mace/mytodo:lts-alpine3.12
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 250m     # 250 millicores = 1/4 core
            memory: 128Mi # 128 MB
          limits:
            cpu: 500m
            memory: 384Mi
        livenessProbe:
          httpGet:
            path: /healthcheck/
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 2        
        # envFrom:
        # - secretRef:
        #     name: database-credentials

---
apiVersion: v1
kind: Service
metadata:
 annotations:
  # service.kubernetes.io/ibm-load-balancer-cloud-provider-ip-type: public
  service.kubernetes.io/ibm-load-balancer-cloud-provider-ip-type: private
 labels:
  app: mytodo
  tier: frontend
 name: mytodo-service
 namespace: default
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: mytodo
    tier: frontend
    # deploymentconfig: nodejs-sample
  type: LoadBalancer