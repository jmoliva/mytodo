---
# Create a Kubernetes namespace
apiVersion: v1
kind: Namespace
metadata:
  name: mytodo

---
# Application to deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mytodo
  namespace: mytodo
spec:
  replicas: 2 # tells deployment to run 2 pods
  selector:
    matchLabels:
      app: mytodo
  template:   # create pods using pod definition in this template
    metadata:
      labels:
        app: mytodo
        tier: frontend
    spec:
      containers:
      - name: mytodo
        image: <registry-region>.icr.io/<namespace>/mytodo-<lastname>:1.0
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 250m     # 250 millicores = 1/4 core
            memory: 128Mi # 128 MB
          limits:
            cpu: 500m
            memory: 384Mi
        envFrom:
        - secretRef:
            name: database-credentials
            optional: true
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mytodo-ingress
  namespace: mytodo
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
spec:
  tls:
  - hosts:
    - mytodo.<ingress-subdomain>
    secretName: <ingress-secret>
  rules:
  - host: mytodo.<ingress-subdomain>
    http:
      paths:
      - path: /
        backend:
          serviceName: mytodo
          servicePort: 8080
---
# Service to expose frontend
apiVersion: v1
kind: Service
metadata:
  name: mytodo
  namespace: mytodo
  labels:
    app: mytodo
    tier: frontend
spec:
  ports:
  - protocol: TCP
    port: 8080
  selector:
    app: mytodo
    tier: frontend
